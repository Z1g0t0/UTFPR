O programa fork.c ao ser compilado e executado automaticamento é criado seu processo, o qual possui seu correspondente process id e onde o mesmo imprime pela primeira chamada da função getpid(). Logo após é chamada a função fork() o qual criará um processo filho, com seu próprio pid mas com o mesmo código/instruções do processo pai que lhe chamou. O processo filho executára o mesmo código a partir da chamada fork() correspondente feita pelo processo pai, e os dois executarão simultaneamente. O valor de retorno da chamada fork() difere se o processo que o chamou for o processo pai(retorna o pid do filho) ou o processo filho(retorna 0). O programa então chega em uma condição if, que por parte do processo pai, como o valor retornado de fork() é o pid do filho sendo maior que zero, espera o término do processo filho pela função wait(), que por sua vez passa pela função sleep(5), fazendo com que o programa "durma" por 5 segundos, e o que explica o fato do ultimo printf de despedida ser primeiramente executado pelo processo filho, que em seguida retorna o wait() chamado pelo pai anteriormente e com o qual se dá o seu printf de despedida, terminando a execução do programa.
